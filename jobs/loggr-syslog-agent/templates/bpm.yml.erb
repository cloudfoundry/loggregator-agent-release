<%
  blacklisted_ranges = p("blacklisted_syslog_ranges")
  blacklisted_ips = blacklisted_ranges.map do |range|
    "#{range['start']}-#{range['end']}"
  end.join(",")

  certs_dir="/var/vcap/jobs/loggr-syslog-agent/config/certs"
  drain_ca=""
  if_p("drain_ca_cert") {
    drain_ca="#{certs_dir}/drain_ca.crt"
  }

  aggregate_drains=""
  if_p("aggregate_drains") {
    aggregate_drains = p("aggregate_drains")
  }

  process = {
    "name" => "loggr-syslog-agent",
    "executable" => "/var/vcap/packages/syslog-agent/syslog-agent",
    "env" => {
      "AGENT_CA_FILE_PATH" => "#{certs_dir}/loggregator_ca.crt",
      "AGENT_CERT_FILE_PATH" => "#{certs_dir}/syslog_agent.crt",
      "AGENT_KEY_FILE_PATH" => "#{certs_dir}/syslog_agent.key",
      "AGENT_CIPHER_SUITES" => "#{p("tls.cipher_suites").split(":").join(",")}",
      "AGENT_PORT" => "#{p("port")}",
      "DRAIN_SKIP_CERT_VERIFY" => "#{p("drain_skip_cert_verify")}",
      "DEFAULT_DRAIN_METADATA" => "#{p("default_drain_metadata")}",
      "DRAIN_TRUSTED_CA_FILE" => "#{drain_ca}",
      "BLACKLISTED_SYSLOG_RANGES" => "#{blacklisted_ips}",
      "AGGREGATE_DRAIN_URLS" => "#{aggregate_drains}",
      "METRICS_PORT" => "#{p("metrics.port")}",
      "METRICS_CA_FILE_PATH" => "#{certs_dir}/metrics_ca.crt",
      "METRICS_CERT_FILE_PATH" => "#{certs_dir}/metrics.crt",
      "METRICS_KEY_FILE_PATH" => "#{certs_dir}/metrics.key",
    }
  }

  if_link("binding_cache") do | binding |
    process["env"]["CACHE_CA_FILE_PATH"] = "#{certs_dir}/cache_ca.crt"
    process["env"]["CACHE_CERT_FILE_PATH"] = "#{certs_dir}/cache_client.crt"
    process["env"]["CACHE_KEY_FILE_PATH"] = "#{certs_dir}/cache_client.key"
    process["env"]["CACHE_COMMON_NAME"] = "#{p("cache.tls.cn")}"
    process["env"]["CACHE_URL"] = "https://#{binding.address}:#{binding.p("external_port")}"
    binding.if_p("default_drain_metadata") do |d|
      process["env"]["default-syslog-upgrade-metadata"] = d
    end
    process["env"]["CACHE_POLLING_INTERVAL"] = "#{p("cache.polling_interval")}"
  end

  bpm = {"processes" => [process] }
%>

<%= YAML.dump(bpm) %>
