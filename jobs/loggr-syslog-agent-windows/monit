<% if p("enabled") %>
<%
  b = link("binding_cache")
  certs_dir = "/var/vcap/jobs/loggr-syslog-agent-windows/config/certs"
  default_drain_metadata = p("default_drain_metadata")
  b.if_p("default_drain_metadata") do |d|
    default_drain_metadata = d
  end
  drain_ca=""
  if_p("drain_ca_cert") {
    drain_ca="#{certs_dir}/drain_ca.crt"
  }

  process = {
    "name" => "syslog-agent",
    "executable" => "/var/vcap/packages/syslog-agent-windows/syslog-agent.exe",
    "args" => [],
    "env" => {
      "CACHE_CA_FILE_PATH" => "#{certs_dir}/cache_ca.crt",
      "CACHE_CERT_FILE_PATH" => "#{certs_dir}/cache_client.crt",
      "CACHE_KEY_FILE_PATH" => "#{certs_dir}/cache_client.key",
      "CACHE_COMMON_NAME" => p("cache.tls.cn"),
      "CACHE_URL" => "https://#{b.address}:#{b.p("external_port")}",
      "CACHE_POLLING_INTERVAL" => p("cache.polling_interval"),

      "AGENT_CA_FILE_PATH" => "#{certs_dir}/loggregator_ca.crt",
      "AGENT_CERT_FILE_PATH" => "#{certs_dir}/syslog_agent.crt",
      "AGENT_KEY_FILE_PATH" => "#{certs_dir}/syslog_agent.key",
      "AGENT_CIPHER_SUITES" => p("tls.cipher_suites").split(":").join(","),
      "AGENT_PORT" => "#{p("port")}",

      "DRAIN_SKIP_CERT_VERIFY" => "#{p("drain_skip_cert_verify")}",
      "DRAIN_TRUSTED_CA_FILE" => "#{drain_ca}",
      "AGGREGATE_DRAIN_URLS" => "#{p("aggregate_drains")}",
      "DEFAULT_DRAIN_METADATA" => "#{default_drain_metadata}",

      "METRICS_PORT" => "#{p("metrics.port")}",
      "METRICS_CA_FILE_PATH" => "#{certs_dir}/metrics_ca.crt",
      "METRICS_CERT_FILE_PATH" => "#{certs_dir}/metrics.crt",
      "METRICS_KEY_FILE_PATH" => "#{certs_dir}/metrics.key",
    }
  }

  monit = { "processes" => [process] }
%>

<%= JSON.pretty_generate(monit) %>
<% end %>
