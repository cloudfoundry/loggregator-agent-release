// This file was generated by git.sr.ht/~nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package bindings_test

import (
	"net"
)

type mockIPChecker struct {
	ResolveAddrCalled chan bool
	ResolveAddrInput  struct {
		Host chan string
	}
	ResolveAddrOutput struct {
		Ret0 chan net.IP
		Ret1 chan error
	}
	CheckBlacklistCalled chan bool
	CheckBlacklistInput  struct {
		Ip chan net.IP
	}
	CheckBlacklistOutput struct {
		Ret0 chan error
	}
}

func newMockIPChecker() *mockIPChecker {
	m := &mockIPChecker{}
	m.ResolveAddrCalled = make(chan bool, 100)
	m.ResolveAddrInput.Host = make(chan string, 100)
	m.ResolveAddrOutput.Ret0 = make(chan net.IP, 100)
	m.ResolveAddrOutput.Ret1 = make(chan error, 100)
	m.CheckBlacklistCalled = make(chan bool, 100)
	m.CheckBlacklistInput.Ip = make(chan net.IP, 100)
	m.CheckBlacklistOutput.Ret0 = make(chan error, 100)
	return m
}
func (m *mockIPChecker) ResolveAddr(host string) (net.IP, error) {
	m.ResolveAddrCalled <- true
	m.ResolveAddrInput.Host <- host
	return <-m.ResolveAddrOutput.Ret0, <-m.ResolveAddrOutput.Ret1
}
func (m *mockIPChecker) CheckBlacklist(ip net.IP) error {
	m.CheckBlacklistCalled <- true
	m.CheckBlacklistInput.Ip <- ip
	return <-m.CheckBlacklistOutput.Ret0
}
